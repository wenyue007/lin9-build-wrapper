#! /bin/bash -

Zeus="base"

if [ X"$1" == X"list" ];then
    DVD="/net/pek-hostel-deb04.wrs.com/buildarea1/nightly/WRL9/product_install/wrlinux-9"
    echo "Show all supported machines..."
    echo yes | ${DVD}/setup.sh --list-machines
    rm -rf bin config .gitconfig
    exit 0
elif [ X"$1" == X"hist" ];then
    cat /folk/`whoami`/.myhist
    exit 0
fi

usage()
{
cat <<EOF

Usage:
$0 bsp_machine [rt|std|cgl] [bts|kts|ltp] [git|dvd]
$0 list
$0 hist
E.g.

$0 intel-skylake-avx512-64 rt bts dvd
EOF
}

remember_his()
{
    hist="/folk/`whoami`/.myhist"
    touch $hist
    grep -w "$0 $bsp_val $kernel_val $testing_type" $hist
    [ $? != 0 ] && echo "$0 $bsp_val $kernel_val $testing_type" >> $hist
}

us()
{
    echo "Doing userspace..."
    grep "userspace-test" conf/local.conf
    if [ $? -ne 0 ];then
        if [ X"$testing_type" == X"us" ];then
            cp /folk/jhu2/scripts/test_plan.list .
        fi
        bitbake-layers add-layer ${other_layer}/userspace
        echo 'WRTEMPLATE_append = " feature/userspace-test "' >> conf/local.conf
        echo 'IMAGE_ROOTFS_EXTRA_SPACE = "5242880"' >> conf/local.conf
        echo "Appended userspace into conf/local.conf"
    else
        echo "userspace already existed"
    fi
}

kts()
{
    echo "Doing kts..."
    grep "wr-kts" conf/local.conf
    if [ $? -ne 0 ];then
        bitbake-layers add-layer ${other_layer}/kts-dev
        echo require templates/feature/wr-kts/template.conf >> conf/local.conf
        echo "BB_NO_NETWORK_pn-lmbench = '0'" >> conf/local.conf
        echo "Appended wr-kts into conf/local.conf"
    else
        echo "wr-kts already existed"
    fi
}

ltp()
{
    echo "Doing ltp..."
    grep "ltp" conf/local.conf
    if [ $? -ne 0 ];then
        bitbake-layers add-layer ${other_layer}/kts-dev
        echo require templates/feature/ltp/template.conf >> conf/local.conf
        echo "Appended ltp into conf/local.conf"
    else
        echo "lpt already existed"
    fi
}

bts()
{
    echo "Doing bts..."
    grep "bts" conf/local.conf
    if [ $? -ne 0 ];then
        bitbake-layers add-layer ${other_layer}/bts-dev
        echo require templates/feature/bts/template.conf >> conf/local.conf
        echo "Appended bts into conf/local.conf"
    else
        echo "bts already existed"
    fi
}

no_testing()
{
    echo "Clearing all testing layers..."
    sed "/templates\/feature\/wr-kts\/template.conf/d" conf/local.conf -i 
    sed "/templates\/feature\/bts\/template.conf/d" conf/local.conf -i
    sed "/templates\/feature\/ltp\/template.conf/d" conf/local.conf -i
    sed "/BB_NO_NETWORK_pn-lmbench/d" conf/local.conf -i
}

inject_testing()
{
    echo $testing_type
    if [ "$testing_type" = "bts" -o "$testing_type" = "bsp" ];then
        bts
    elif [ "$testing_type" = "kts" ];then
        kts
    elif [ "$testing_type" = "ltp" ];then
        ltp
    elif [ "$testing_type" = "us" ];then
        us
    else
        echo "Not specified testing type,without any testing layers"
        no_testing
    fi
}

build_next()
{
    . ./environment-setup-x86_64-wrlinuxsdk-linux
    . ./oe-init-build-env build
    
    inject_testing
    echo "BB_NO_NETWORK = '0'" >> conf/local.conf
    
    #echo IMAGE_FSTYPES += \"tar.bz2\" >> conf/local.conf
    echo LINUX_KERNEL_TYPE = \"$kernel_val\" >> conf/local.conf
    echo "bitbake $ROOTFS_TYPE"
    bitbake $ROOTFS_TYPE

    if [ -d ./tmp/buildstats ]; then
        new=`find ./tmp/buildstats/ -name do_image_complete 2>/dev/null`
    else
        new="FAILED"
    fi
}

#main
[ $# -lt 3 ] && { echo "Please input 3 parameters";usage;exit 1; }
[ $# -gt 4 ] && { echo "Please input 3 parameters";usage;exit 1; }


for opt1 in $@
do
    case $opt1 in
        git|dvd)
                      wherego=$opt1
                      ;;
        bts|kts|ltp|us)
                      testing_type=$opt1
                      ;;
        rt|std|cgl)
                      kernel_val=$opt1
                      [ X"$kernel_val" == X"cgl" ] && Zeus="cgp"
                      ;;
        ultimate|*)
                      bsp_val=$opt1
                     ;;
    esac
done

wherego=${wherego:-"git"}
dvd_path="/folk/lpg-build/cdc/fast_prod/wrlinux90RCPL/"

if [ X"$wherego" == X"dvd" ];then
    echo "By using DVD source..."
    DVD_1=`ls -lrt /folk/lpg-build/cdc/fast_prod/wrlinux90RCPL/| tail -1|awk -F" " '{print $NF}'`
    DVD="$DVD_1/wrlinux-9"
    read -n1 -t 10 -p "$DVD ???[y]";echo ""
    if [ X"$REPLY" = X"n" ];then
        read -t 300 -p "Please input your DVD path:" DVD_2
        [ -z "$DVD_2" ] && exit 1
        DVD="$DVD_2/wrlinux-9"
        echo "Your DVD is: $DVD" 
    else
        echo "Selected DVD: $DVD"
    fi
else
    echo "By using GIT source..."
    if [ X"$kernel_val" == X"cgl" ];then
        DVD="/net/pek-lpgtest15/buildarea1/jhu2/WRLINUX_9_LTS/wrlinux-x/"
    else
        DVD="/net/pek-hostel-deb04.wrs.com/buildarea1/nightly/WRL9/product_install/wrlinux-9"
    fi
fi

if [ "$Zeus" = "base" ];then
    echo "For base wrlinux..."
    #DVD="/net/pek-hostel-deb04.wrs.com/buildarea1/nightly/WRL9/product_install/wrlinux-9"
    #DVD_1="/folk/lpg-build/cdc/fast_prod/wrlinux90RCPL/RCPL0003_LX01"
    #DVD="$DVD_1/wrlinux-9"
    ROOTFS_TYPE="wrlinux-image-glibc-std"
    EXTRA_CMD="--accept-eula=yes"
    #distros_val="wrlinux-std-sato"
    distros_val="wrlinux"
    other_layer="/net/pek-lpgtest15/buildarea1/jhu2/wrl9-testing/wr-testing"
elif [ "$Zeus" = "cgp" ];then
    echo "For cgp..." 
    #DVD="/net/pek-lpgtest15/buildarea1/jhu2/WRLINUX_9_LTS/wrlinux-x/"
    ROOTFS_TYPE="wrlinux-image-glibc-cgl"
    EXTRA_CMD="--layers wr-cgl --accept-eula=yes"
    distros_val="wrlinux-cgl"
    other_layer="/net/pek-lpgtest15/buildarea1/jhu2/wrl9-testing/wr-testing"
    echo "Kernel type is only supported cgl."
    kernel_val=cgl
fi

if [ X"$testing_type" == X"us" ];then
    EXTRA_CMD=$EXTRA_CMD" --templates feature/test,feature/gdbserver,feature/gdb,feature/debug,feature/kernel-debug,feature/acl,feature/LAMP,feature/test --layer meta-filesystems,meta-xfce "
fi

if [ -z "$kernel_val" ];then
    kernel_val="standard"
elif [ "$kernel_val" = "std" ];then
    kernel_val="standard"
elif [ "$kernel_val" = "rt" ];then
    kernel_val="preempt-rt"
elif [ "$kernel_val" = "cgl" ];then
    kernel_val="cgl"
else
    echo "$kernel_val is wrong krenel type!!!"
    exit 1
fi

#record command line into $home/.myhist
remember_his

if [ "$bsp_val" = "intel-skylake-avx512-64" ];then
    echo "$DVD/setup.sh --machines=$bsp_val --kernel=$kernel_val --distros=$distros_val --base-url git://pek-git.wrs.com --dl-layers $EXTRA_CMD"
    eval "echo yes | $DVD/setup.sh --machines=$bsp_val --kernel=$kernel_val --distros=$distros_val --base-url git://pek-git.wrs.com --dl-layers $EXTRA_CMD"
else
    echo "$DVD/setup.sh --machines=$bsp_val --kernel=$kernel_val --distros=$distros_val --base-url git://pek-git.wrs.com --dl-layers $EXTRA_CMD"
    eval "$DVD/setup.sh --machines=$bsp_val --kernel=$kernel_val --distros=$distros_val --base-url git://pek-git.wrs.com --dl-layers $EXTRA_CMD"
fi


build_next

python ~/scripts/sendmail_new.py $new $testing_type
